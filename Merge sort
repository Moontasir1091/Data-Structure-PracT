#include <bits/stdc++.h>
using namespace std;

void merge(int l, int r, int mid, vector<int> &a) {
    int ls2 = mid - l + 1; // size of left subarray
    int rs2 = r - mid;     // size of right subarray

    vector<int> L(ls2 + 1), R(rs2 + 1);

    for (int i = 0; i < ls2; i++)
        L[i] = a[i + l];
    for (int i = 0; i < rs2; i++)
        R[i] = a[i + mid + 1];

    L[ls2] = R[rs2] = INT_MAX; // sentinel values

    int li = 0, ri = 0;
    for (int i = l; i <= r; i++) {
        if (L[li] <= R[ri]) {
            a[i] = L[li];
            li++;
        } else {
            a[i] = R[ri];
            ri++;
        }
    }
}

void mergeSort(int l, int r, vector<int> &a) {
    if (l >= r) return;

    int mid = (l + r) / 2;
    mergeSort(l, mid, a);
    mergeSort(mid + 1, r, a);
    merge(l, r, mid, a);
}
int main() {
    vector<int> arr = {5, 2, 4, 7, 1, 3, 2, 6};
    mergeSort(0, arr.size() - 1, arr);

    for (int x : arr)
        cout << x << " ";
    return 0;
}
